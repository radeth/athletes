{"version":3,"sources":["libs/calculate.js","components/Hints/index.js","components/Overview/index.js","components/Predictions/Discipline.js","components/Predictions/index.js","components/Profile/index.js","pages/Home/index.js","index.js","public/images/aesthetics.png","public/images/agility.png","public/images/endurance.png","public/images/lowerBody.png","public/images/upperBody.png"],"names":["disciplineScore","athleteSkillset","disciplineRequirements","personalSkill","requirement","score","_arr","Object","keys","_i","length","skill","Hints","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","shouldTryArray","setShouldTryArray","shouldAvoidArray","setShouldAvoidArray","prevProps","prevState","athlete","setState","_this2","react_default","a","createElement","className","Tabs","defaultActiveKey","id","Tab","eventKey","title","map","discipline","key","name","skillset","requirements","_this3","disciplinesArray","disciplines","objectSpread","sort","b","bestValuesArray","lastValue","bestValueCounter","i","checkNative","_this4","isNative","nativeDisciplines","forEach","nativeDiscipline","React","Component","images","Map","aesthetics","agility","enduranceImage","lowerBody","upperBody","Overview","bio","values","src","get","alt","Discipline","isHidden","isIndividual","Predictions","filterType","sortType","arrayOfDiciplines","setArray","onSubmit","e","action","onChange","setFilterType","bind","setSortType","Predictions_Discipline","console","log","target","value","filter","slice","localeCompare","Profile","style","backgroundImage","concat","photo","Home","counter","athletes","onClick","decrement","increment","Profile_Profile","Overview_Overview","Predictions_Predictions","Hints_Hints","counterTemp","render","Home_Home","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.6ccc6243.chunk.js","sourcesContent":["/**\r\n * Method for calculating score for individual skill\r\n * @param {number} personalSkill skill value of an athlete\r\n * @param {number} requirement skill value requirement of a discipline\r\n */\r\nexport const skillScore = (personalSkill, requirement) => {\r\n    return (personalSkill - requirement) * requirement * 2;\r\n}\r\n\r\n/**\r\n * Method for calculating score for an athlete in specific discipline\r\n * @param {object} athleteSkillset object with an athlete skillset\r\n * @param {object} disciplineRequirements object with an discipline requirements\r\n */\r\nexport const disciplineScore = (athleteSkillset, disciplineRequirements) => {\r\n    let score = 50;\r\n    for (let skill of Object.keys(athleteSkillset))\r\n        score += skillScore(athleteSkillset[skill], disciplineRequirements[skill]);\r\n    return score;\r\n}\r\n","/**\r\n * Component for aggregating user data. Displays disciplines with lowest & highest scores for the given athlete.\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./index.scss\";\r\nimport { Tabs, Tab } from \"../../../node_modules/react-bootstrap\";\r\nimport { disciplineScore } from \"../../libs/calculate\";\r\n\r\nexport default class Hints extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shouldTryArray: this.setShouldTryArray(),\r\n      shouldAvoidArray: this.setShouldAvoidArray()\r\n    };\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.athlete !== this.props.athlete) {\r\n      this.setState({\r\n        shouldTryArray: this.setShouldTryArray(),\r\n        shouldAvoidArray: this.setShouldAvoidArray()\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"l-section c-hints\">\r\n        <h2 className=\"header\">Hints</h2>\r\n        <div className=\"content\">\r\n          <Tabs defaultActiveKey={1} id=\"uncontrolled-tab-example\">\r\n            <Tab eventKey={1} title=\"Should try\">\r\n              <div className=\"content\">\r\n                {this.state.shouldTryArray.map(discipline => {\r\n                  return (\r\n                    <div className=\"c-discipline\" key={discipline.name}>\r\n                      <span className=\"name\">{discipline.name}</span> -\r\n                      <span className=\"score\">{discipline.score}</span>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Tab>\r\n            <Tab eventKey={2} title=\"Should avoid\">\r\n              <div className=\"content\">\r\n                {this.state.shouldAvoidArray.map(discipline => {\r\n                  return (\r\n                    <div className=\"c-discipline\" key={discipline.name}>\r\n                      <span className=\"name\">{discipline.name}</span> -\r\n                      <span className=\"score\">\r\n                        {disciplineScore(\r\n                          this.props.athlete.skillset,\r\n                          discipline.requirements\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Tab>\r\n          </Tabs>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n  setShouldTryArray() {\r\n    let disciplinesArray = this.props.disciplines;\r\n    disciplinesArray = disciplinesArray.map(discipline => {\r\n      return (discipline = {\r\n        ...discipline,\r\n        score: disciplineScore(\r\n          this.props.athlete.skillset,\r\n          discipline.requirements\r\n        )\r\n      });\r\n    });\r\n    disciplinesArray.sort((a, b) => {\r\n      return b.score - a.score;\r\n    });\r\n    let bestValuesArray = [];\r\n    let lastValue = null;\r\n    let bestValueCounter = 0;\r\n    for (\r\n      let i = 0;\r\n      i < Object.keys(disciplinesArray).length && bestValueCounter < 3;\r\n      i++\r\n    ) {\r\n      if (this.checkNative(disciplinesArray[i].name) === false) {\r\n        bestValuesArray[i] = disciplinesArray[i];\r\n        if (bestValuesArray[i].score !== lastValue) {\r\n          lastValue = disciplinesArray[i].score;\r\n          bestValueCounter++;\r\n        }\r\n      }\r\n    }\r\n    return bestValuesArray;\r\n  }\r\n\r\n  setShouldAvoidArray() {\r\n    let disciplinesArray = this.props.disciplines;\r\n    disciplinesArray = disciplinesArray.map(discipline => {\r\n      return (discipline = {\r\n        ...discipline,\r\n        score: disciplineScore(\r\n          this.props.athlete.skillset,\r\n          discipline.requirements\r\n        )\r\n      });\r\n    });\r\n    disciplinesArray.sort((a, b) => {\r\n      return a.score - b.score;\r\n    });\r\n    let bestValuesArray = [];\r\n    let lastValue = null;\r\n    let bestValueCounter = 0;\r\n    for (\r\n      let i = 0;\r\n      i < Object.keys(disciplinesArray).length && bestValueCounter < 3;\r\n      i++\r\n    ) {\r\n      if (this.checkNative(disciplinesArray[i].name) === false) {\r\n        bestValuesArray[i] = disciplinesArray[i];\r\n        if (bestValuesArray[i].score !== lastValue) {\r\n          lastValue = disciplinesArray[i].score;\r\n          bestValueCounter++;\r\n        }\r\n      }\r\n    }\r\n    return bestValuesArray;\r\n  }\r\n  checkNative(discipline) {\r\n    //console.log(discipline.name,this.props.athlete.nativeDisciplines)\r\n    let isNative = null;\r\n    this.props.athlete.nativeDisciplines.forEach(nativeDiscipline => {\r\n      // console.log(nativeDiscipline)\r\n      // console.log(discipline)\r\n\r\n      if (nativeDiscipline === discipline) {\r\n        isNative = true; // is navite\r\n      } else {\r\n        isNative = false;\r\n      }\r\n\r\n      // native\r\n    });\r\n    return isNative;\r\n  }\r\n}\r\n\r\n\r\nHints.propTypes = {\r\n  athlete: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    photo: PropTypes.string.isRequired,\r\n    bio: PropTypes.string.isRequired,\r\n    skillset: PropTypes.objectOf(PropTypes.number).isRequired,\r\n    nativeDisciplines: PropTypes.arrayOf(PropTypes.string).isRequired\r\n  }).isRequired,\r\n  disciplines: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      photo: PropTypes.string.isRequired,\r\n      isIndividual: PropTypes.bool.isRequired,\r\n      tags: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n      requirements: PropTypes.objectOf(PropTypes.number).isRequired\r\n    })\r\n  ).isRequired\r\n};\r\n","/**\r\n * Component for displaying basic info about the provided athlete.\r\n */\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './index.scss'\r\nimport aesthetics from './../../public/images/aesthetics.png'\r\nimport agility from './../../public/images/agility.png'\r\nimport enduranceImage from './../../public/images/endurance.png'\r\nimport lowerBody from './../../public/images/lowerBody.png'\r\nimport upperBody from './../../public/images/upperBody.png'\r\n\r\nconst images = new Map([\r\n    ['aesthetics', aesthetics],\r\n    ['agility', agility],\r\n    ['endurance', enduranceImage],\r\n    ['lowerBody', lowerBody],\r\n    ['upperBody', upperBody]\r\n])\r\n\r\nexport default class Overview extends React.Component {\r\n   \r\n    render() {\r\n        return (\r\n            <section className=\"l-section c-overview\" >\r\n                <h2 className=\"header\" >Overview</h2>\r\n                <div className=\"content\"> \r\n                    <span className=\"label\">Bio</span>\r\n                    <p className=\"bio\">{this.props.bio}</p>\r\n                    <span className=\"label\">Skillset</span>\r\n                    <div className=\"skillset\">\r\n                        {Object.keys(this.props.skillset).map((skill) => {\r\n                            switch(this.props.skillset[skill]){\r\n                                case Object.values(this.props.skillset).sort()[0]: //lowest value\r\n                                return (\r\n                                    <div className='skillsetValue lowest' key={skill}>\r\n                                        \r\n                                        <img className=\"skillsetImg\" src={images.get(skill)} alt=\"Icon\" />\r\n    \r\n                                        {this.props.skillset[skill]}\r\n                                    </div>)\r\n                                \r\n                                case Object.values(this.props.skillset).sort()[Object.values(this.props.skillset).length-1]: // hihgest value\r\n                                return (\r\n                                    <div className='skillsetValue highest' key={skill}>\r\n                                        \r\n                                        <img className=\"skillsetImg\" src={images.get(skill)} alt=\"Icon\" />\r\n    \r\n                                        {this.props.skillset[skill]}\r\n                                    </div>)\r\n                               \r\n                                default:\r\n                                return (\r\n                                    <div className='skillsetValue' key={skill}>\r\n                                        \r\n                                        <img className=\"skillsetImg\" src={images.get(skill)} alt=\"Icon\" />\r\n    \r\n                                        {this.props.skillset[skill]}\r\n                                    </div>)\r\n                            }\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n    \r\n    \r\n}\r\n\r\nOverview.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    photo: PropTypes.string.isRequired,\r\n    bio: PropTypes.string.isRequired,\r\n    skillset: PropTypes.objectOf(PropTypes.number).isRequired,\r\n    nativeDisciplines: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n}","import React from \"react\";\r\nimport \"./index.scss\";\r\nclass Discipline extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isHidden: false\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div key={this.props.discipline.name} className=\"c-discipline\">\r\n        <span className=\"name\">{this.props.discipline.name}</span> -{\" \"}\r\n        <span className=\"score\">{this.props.discipline.score}</span>\r\n        {this.props.discipline.isIndividual ? (\r\n          <div className=\"flag\">Individual</div>\r\n        ) : (\r\n          <div className=\"flag\">Team</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Discipline;\r\n","/**\r\n * Component displaying and managing list of disciplines with calculated athlete score.\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./index.scss\";\r\nimport Discipline from \"./Discipline\";\r\nimport { disciplineScore } from \"../../libs/calculate\";\r\n\r\nexport default class Predictions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterType: \"all\",\r\n      sortType: \"alphabetical\",\r\n      arrayOfDiciplines: this.setArray(\"all\", \"alphabetical\")\r\n    };\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.athlete !== this.props.athlete) {\r\n      this.setState({\r\n        arrayOfDiciplines: this.setArray()\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <section className=\"l-section c-predictions\">\r\n        <h2 className=\"header\">Predictions</h2>\r\n        <div className=\"content\">\r\n          <form onSubmit={e => this.action(e)}>\r\n            <label>filter</label>\r\n            <select onChange={this.setFilterType.bind(this)}>\r\n              <option>all</option>\r\n              <option>team</option>\r\n              <option>individual</option>\r\n            </select>\r\n            <label>sort</label>\r\n            <select onChange={this.setSortType.bind(this)}>\r\n              <option>alphabetical</option>\r\n              <option>score</option>\r\n            </select>\r\n          </form>\r\n          {this.state.arrayOfDiciplines.map(discipline => {\r\n            return <Discipline discipline={discipline} />;\r\n          })}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n  setSortType(e) {\r\n    console.log(e.target.value);\r\n    this.setState({\r\n      arrayOfDiciplines: this.setArray(this.state.filterType, e.target.value),\r\n      sortType: e.target.value\r\n    });\r\n  }\r\n  setFilterType(e) {\r\n    console.log(e.target.value);\r\n    this.setState({\r\n      arrayOfDiciplines: this.setArray(e.target.value, this.state.sortType),\r\n      filterType: e.target.value\r\n    });\r\n  }\r\n  //returning sort and filter array of disciplines\r\n  setArray(filterType, sortType) {\r\n    let disciplinesArray = this.props.disciplines;\r\n    disciplinesArray = disciplinesArray.map(discipline => {\r\n      return (discipline = {\r\n        ...discipline,\r\n        score: disciplineScore(\r\n          this.props.athlete.skillset,\r\n          discipline.requirements\r\n        )\r\n      });\r\n    });\r\n    switch (filterType) {\r\n      case \"team\":\r\n        disciplinesArray = disciplinesArray.filter(discipline => {\r\n          return discipline.isIndividual === false;\r\n        });\r\n        break;\r\n      case \"individual\":\r\n        disciplinesArray = disciplinesArray.filter(discipline => {\r\n          return discipline.isIndividual === true;\r\n        });\r\n        break;\r\n      default:\r\n    }\r\n    switch (sortType) {\r\n      case \"alphabetical\":\r\n        disciplinesArray = disciplinesArray.slice().sort((a, b) => {\r\n          return a.name.localeCompare(b.name);\r\n        });\r\n        break;\r\n      case \"score\":\r\n        disciplinesArray = disciplinesArray.slice().sort((a, b) => {\r\n          return a.score - b.score;\r\n        });\r\n        break;\r\n      default:\r\n    }\r\n    return disciplinesArray;\r\n  }\r\n}\r\n\r\nPredictions.propTypes = {\r\n  athlete: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    photo: PropTypes.string.isRequired,\r\n    bio: PropTypes.string.isRequired,\r\n    skillset: PropTypes.objectOf(PropTypes.number).isRequired,\r\n    nativeDisciplines: PropTypes.arrayOf(PropTypes.string).isRequired\r\n  }).isRequired,\r\n  disciplines: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      photo: PropTypes.string.isRequired,\r\n      isIndividual: PropTypes.bool.isRequired,\r\n      tags: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n      requirements: PropTypes.objectOf(PropTypes.number).isRequired\r\n    })\r\n  ).isRequired\r\n};\r\n","/**\r\n * Component displaying basic info about the athlete.\r\n */\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './index.scss'\r\n\r\nexport default class Profile extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"c-profile\" >\r\n                <div className=\"photo\" style={{ backgroundImage: `url(${this.props.photo})` }} /> \r\n                <div>\r\n                    <h1 className=\"name\" >{this.props.name}</h1>\r\n                    <ul className=\"disciplines\" >\r\n                        {this.props.nativeDisciplines.map((name) => <li key={name} className=\"discipline-label\">{name}</li> )}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    photo: PropTypes.string.isRequired,\r\n    bio: PropTypes.string.isRequired,\r\n    skillset: PropTypes.objectOf(PropTypes.number).isRequired,\r\n    nativeDisciplines: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n}","/**\r\n * Component responsible for Home page layout.\r\n */\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Hints from '../../components/Hints';\r\nimport Overview from '../../components/Overview';\r\nimport Predictions from '../../components/Predictions';\r\nimport Profile from '../../components/Profile';\r\nimport './index.scss';\r\nimport { Tabs, Tab } from '../../../node_modules/react-bootstrap'\r\n\r\n\r\nexport default class Home extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            counter: 0\r\n        };\r\n        // console.log(this.props.athlete)\r\n    }\r\n\r\n    render() {\r\n        const athlete = this.props.athletes ? this.props.athletes[this.state.counter] : null\r\n        const disciplines = this.props.disciplines ? this.props.disciplines : []\r\n        if (athlete)\r\n            return (\r\n                <div className=\"p-home\">\r\n                    <button className=\"btn\" onClick={this.decrement.bind(this)}>prev</button>\r\n                    <button className=\"btn\" onClick={this.increment.bind(this)}>next</button>\r\n                    <Profile {...athlete} />\r\n                    <Tabs defaultActiveKey={1} id=\"uncontrolled-tab\">\r\n                        <Tab eventKey={1} title=\"Overview\">\r\n                            <Overview {...athlete} />\r\n                        </Tab>\r\n                        <Tab eventKey={2} title=\"Predictions\">\r\n                            <Predictions athlete={athlete} disciplines={disciplines} />\r\n                        </Tab>\r\n                        <Tab eventKey={3} title=\"Hints\">\r\n                            <Hints athlete={athlete} disciplines={disciplines} />\r\n                        </Tab>\r\n                    </Tabs>\r\n                </div>\r\n\r\n            )\r\n        else\r\n            return <div>\r\n                <span>No athlete data</span>\r\n            </div>\r\n\r\n    }\r\n    decrement() {\r\n        let counterTemp\r\n        if (this.state.counter === 0) {\r\n            counterTemp = 0\r\n        }\r\n        else {\r\n            counterTemp = this.state.counter - 1\r\n        }\r\n\r\n        this.setState({\r\n            counter: counterTemp\r\n        })\r\n\r\n\r\n    }\r\n    increment() {\r\n\r\n        let counterTemp\r\n        if (this.state.counter === Object.keys(this.props.athletes).length - 1) {\r\n            counterTemp = Object.keys(this.props.athletes).length - 1\r\n        }\r\n        else {\r\n            counterTemp = this.state.counter + 1\r\n        }\r\n        this.setState({\r\n            counter: counterTemp\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nHome.propTypes = {\r\n    athletes: PropTypes.arrayOf(PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        photo: PropTypes.string.isRequired,\r\n        bio: PropTypes.string.isRequired,\r\n        skillset: PropTypes.objectOf(PropTypes.number).isRequired,\r\n        nativeDisciplines: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    })).isRequired,\r\n    disciplines: PropTypes.arrayOf(PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        photo: PropTypes.string.isRequired,\r\n        isIndividual: PropTypes.bool.isRequired,\r\n        tags: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n        requirements: PropTypes.objectOf(PropTypes.number).isRequired,\r\n    })).isRequired\r\n}\r\n\r\n\r\n\r\n                    // <Overview {...athlete} />\r\n                    // <Predictions athlete={athlete} disciplines={disciplines} />\r\n                    // <Hints athlete={athlete} disciplines={disciplines} />","/**\r\n * Application entrypoint\r\n */\r\n\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Home from './pages/Home';\r\nimport athletes from './fixtures/athletes.json';\r\nimport disciplines from './fixtures/disciplines.json';\r\n\r\nimport './index.scss'\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Home athletes={athletes} disciplines={disciplines} />\r\n  </div>\r\n);\r\n\r\nrender(<App />, document.getElementById(\"app\"));\r\n","module.exports = __webpack_public_path__ + \"static/media/aesthetics.6ee46a46.png\";","module.exports = __webpack_public_path__ + \"static/media/agility.fbb0c60c.png\";","module.exports = __webpack_public_path__ + \"static/media/endurance.487ff71d.png\";","module.exports = __webpack_public_path__ + \"static/media/lowerBody.c6be76f8.png\";","module.exports = __webpack_public_path__ + \"static/media/upperBody.37145900.png\";"],"sourceRoot":""}